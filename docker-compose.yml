---
version: "3.8"
services:
  kna-historie:
    image: ghcr.io/mark-me/kna-history:v0.0.1
    # build:
    #   context: ./nginx
    container_name: kna-historie
    restart: unless-stopped
    environment:
      - TZ=Europe/Amsterdam
    volumes:
      - resources:/data/resources
    depends_on:
      - mariadb
    networks:
      - internal_network
      - public_network  # Allows web access
  mariadb:
    image: mariadb:10.11.6
    container_name: mariadb
    restart: always
    command: --transaction-isolation=READ-COMMITTED --log-bin=binlog --binlog-format=ROW --bind-address=0.0.0.0
    volumes:
      - db:/var/lib/mysql
    ports:
      - 3306:3306
    environment:
      - TZ=Europe/Amsterdam
      - MARIADB_ROOT_PASSWORD=${MARIADB_ROOT_PASSWORD}
      - MARIADB_DATABASE=${MARIADB_DATABASE}
      - MARIADB_USER=${MARIADB_USER}
      - MARIADB_PASSWORD=${MARIADB_PASSWORD}
      - PUID=1000
      - PGID=1000
    networks:
      - internal_network
  nginx:
    container_name: nginx
    build:
      context: ./nginx
    ports:
      - 80:80
      - 443:443
    environment:
      DOMAIN_NAME: $DOMAIN_NAME
    volumes:
      - /data/certbot/conf:/etc/letsencrypt
      - /data/certbot/www:/var/www/certbot
    networks:
      - internal_network
      - public_network  # Allows web access
  certbot-auto:
    container_name: certbot
    build:
      context: ./certbot-auto
    volumes:
      - /data/certbot/conf:/etc/letsencrypt
      - /data/certbot/www:/var/www/certbot
    environment:
      DOMAIN_NAME: ${DOMAIN_NAME}
      EMAIL_ADDRESS: ${EMAIL_ADDRESS}
    networks:
      - internal_network
      - public_network  # Allows web access
  duckdns:
      image: ghcr.io/linuxserver/duckdns:version-369fbd5c
      container_name: duckdns
      environment:
        - PUID=1000
        - PGID=1000
        - TZ=Europe/Amsterdam
        - SUBDOMAINS=kna-historie
        - TOKEN=11afd534-1ff8-4779-989d-1bf4f25561f3
        - LOG_FILE=false
      networks:
        - internal_network
        - public_network  # Allows web access

networks:
  internal_network:
    driver: bridge
  public_network:
    driver: bridge  # Allows external access to web app

volumes:
  resources:
    driver: local
    driver_opts:
      type: none
      device: ${DIR_RESOURCES}
      o: "bind,rw"
  db:
    driver: local
    driver_opts:
      type: none
      device: ${DIR_MARIADB}
      o: "bind,rw"
